{"version":3,"sources":["components/Header.module.scss","components/Input.module.scss","components/Result.module.scss","components/App.module.scss","components/Header.jsx","components/Input.jsx","components/Result.jsx","components/App.jsx","index.jsx"],"names":["module","exports","cx","classNames","bind","styles","Header","className","Input","label","value","type","placeholder","onChange","addons","maxLength","minLength","useState","active","setActive","inputRef","useRef","handleChange","e","Function","onClick","current","focus","ref","onFocus","onBlur","formatTime","seconds","parseInt","toFixed","Result","calculationResult","header","body","map","retryCount","backoffSeconds","accumulateBackoffSeconds","key","getQueryStringValue","url","URL","window","location","URLSearchParams","search","get","App","minRetryBackoffSeconds","setMinRetryBackoffSeconds","maxRetryBackoffSeconds","setMaxRetryBackoffSeconds","totalRetryCount","setTotalRetryCount","isNaN","parseFloat","minRetryBackoff","maxRetryBackoff","result","Math","min","push","calculateExponentialBackoff","history","replaceState","newUrl","origin","path","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0bd1f490.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__uhOLT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2YPOO\",\"active\":\"Input_active__1RN56\",\"inner-wrapper\":\"Input_inner-wrapper__3Ydmx\",\"addons\":\"Input_addons__29BWK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Result\":\"Result_Result__4fLSh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3yAAK\",\"form-wrapper\":\"App_form-wrapper__D_UVa\"};","import React from \"react\";\r\nimport classNames from \"classnames/bind\";\r\n\r\nimport styles from \"./Header.module.scss\";\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className={cx(\"Header\")}>\r\n      <h1>truncated exponential backoff simulator</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useRef } from \"react\";\r\nimport classNames from \"classnames/bind\";\r\n\r\nimport styles from \"./Input.module.scss\";\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Input = ({\r\n  label,\r\n  value,\r\n  type,\r\n  placeholder,\r\n  onChange,\r\n  addons,\r\n  maxLength,\r\n  minLength\r\n}) => {\r\n  const [active, setActive] = useState(false);\r\n  const inputRef = useRef();\r\n  const handleWrapperClick = () => {\r\n    setActive(true);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const handleChange = e => {\r\n    if (onChange && onChange instanceof Function) {\r\n      onChange(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={cx(\"Input\", { [\"active\"]: active })}\r\n      onClick={() => handleWrapperClick()}\r\n    >\r\n      {label && <label>{label}</label>}\r\n      <div className={cx(\"inner-wrapper\")}>\r\n        <input\r\n          ref={inputRef}\r\n          type={type}\r\n          value={value}\r\n          placeholder={placeholder}\r\n          maxLength={maxLength}\r\n          minLength={minLength}\r\n          onChange={e => handleChange(e)}\r\n          onFocus={() => setActive(true)}\r\n          onBlur={() => setActive(false)}\r\n        />\r\n        {addons && <div className={cx(\"addons\")}>{addons}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport classNames from \"classnames/bind\";\r\n\r\nimport styles from \"./Result.module.scss\";\r\nconst cx = classNames.bind(styles);\r\n\r\nconst formatTime = seconds => {\r\n  if (seconds >= 60) {\r\n    return `${parseInt(seconds / 60)} min ${parseInt(seconds % 60)} sec`;\r\n  } else if (seconds >= 10) {\r\n    return `${parseInt(seconds % 60)} sec`;\r\n  }\r\n  return `${(seconds % 60).toFixed(2)} sec`;\r\n};\r\n\r\nconst Result = ({ calculationResult }) => {\r\n  const header = (\r\n    <tr>\r\n      <th>retry #</th>\r\n      <th>current backoff</th>\r\n      <th>accumulated backoff</th>\r\n    </tr>\r\n  );\r\n  const body = calculationResult.map(\r\n    ({ retryCount, backoffSeconds, accumulateBackoffSeconds }) => {\r\n      return (\r\n        <tr key={retryCount}>\r\n          <td>{retryCount}</td>\r\n          <td>{formatTime(backoffSeconds)}</td>\r\n          <td>{formatTime(accumulateBackoffSeconds)}</td>\r\n        </tr>\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div className={cx(\"Result\")}>\r\n      <table>\r\n        <thead>{header}</thead>\r\n        <tbody>{body}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React, { useState } from \"react\";\r\nimport classNames from \"classnames/bind\";\r\n\r\nimport Header from \"./Header\";\r\nimport Input from \"./Input\";\r\nimport Result from \"./Result\";\r\n\r\nimport styles from \"./App.module.scss\";\r\nconst cx = classNames.bind(styles);\r\n\r\nconst calculateExponentialBackoff = (\r\n  minRetryBackoff,\r\n  maxRetryBackoff,\r\n  totalRetryCount\r\n) => {\r\n  let result = [];\r\n  let accumulateBackoffSeconds = 0.0;\r\n\r\n  for (let retryCount = 1; retryCount <= totalRetryCount; retryCount++) {\r\n    const backoffSeconds = Math.min(\r\n      minRetryBackoff * 2 ** (retryCount - 1),\r\n      maxRetryBackoff\r\n    );\r\n    accumulateBackoffSeconds += backoffSeconds;\r\n\r\n    result.push({\r\n      retryCount,\r\n      backoffSeconds,\r\n      accumulateBackoffSeconds\r\n    });\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst getQueryStringValue = key => {\r\n  const url = new URL(window.location);\r\n  const params = new URLSearchParams(url.search);\r\n  return params.get(key);\r\n};\r\n\r\nconst App = () => {\r\n  const [minRetryBackoffSeconds, setMinRetryBackoffSeconds] = useState(\r\n    getQueryStringValue(\"min\") || 0.1\r\n  );\r\n  const [maxRetryBackoffSeconds, setMaxRetryBackoffSeconds] = useState(\r\n    getQueryStringValue(\"max\") || 60.0\r\n  );\r\n  const [totalRetryCount, setTotalRetryCount] = useState(\r\n    getQueryStringValue(\"retry\") || 15\r\n  );\r\n\r\n  let calculationResult = null;\r\n\r\n  if (\r\n    isNaN(parseFloat(minRetryBackoffSeconds)) ||\r\n    isNaN(parseFloat(maxRetryBackoffSeconds)) ||\r\n    isNaN(parseInt(totalRetryCount))\r\n  ) {\r\n    calculationResult = [];\r\n  } else {\r\n    calculationResult = calculateExponentialBackoff(\r\n      parseFloat(minRetryBackoffSeconds),\r\n      parseFloat(maxRetryBackoffSeconds),\r\n      parseInt(totalRetryCount)\r\n    );\r\n\r\n    if (window.history.replaceState) {\r\n      const newUrl =\r\n        new URL(window.location).origin +\r\n        `?min=${minRetryBackoffSeconds}&max=${maxRetryBackoffSeconds}&retry=${totalRetryCount}`;\r\n\r\n      window.history.replaceState({ path: newUrl }, \"\", newUrl);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main className={cx(\"App\")}>\r\n      <Header />\r\n\r\n      <div className={cx(\"form-wrapper\")}>\r\n        <Input\r\n          type=\"number\"\r\n          label=\"min retry backoff\"\r\n          value={minRetryBackoffSeconds}\r\n          onChange={e => setMinRetryBackoffSeconds(e.target.value)}\r\n          addons=\"sec\"\r\n        />\r\n        <Input\r\n          type=\"number\"\r\n          label=\"max retry backoff\"\r\n          value={maxRetryBackoffSeconds}\r\n          onChange={e => setMaxRetryBackoffSeconds(e.target.value)}\r\n          addons=\"sec\"\r\n        />\r\n        <Input\r\n          type=\"number\"\r\n          label=\"total retry count\"\r\n          value={totalRetryCount}\r\n          onChange={e => setTotalRetryCount(e.target.value)}\r\n          maxLength=\"3\"\r\n          addons=\"retry\"\r\n        />\r\n      </div>\r\n\r\n      <Result calculationResult={calculationResult} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nimport \"normalize-css\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}